(define  (domain tyre)
  (:requirements :typing)
  (:types Jack Boot Wheel Hub Wrench Nut)
  (:predicates
    (Jack_fsm0_state0)
    (Jack_fsm0_state1)
    (Jack_fsm0_state2)
    (Jack_fsm0_state3)
    (Jack_fsm0_state4)
    (Boot_fsm0_state0)
    (Boot_fsm0_state1)
    (Wheel_fsm0_state0)
    (Wheel_fsm0_state1)
    (Wheel_fsm0_state2)
    (Hub_fsm0_state0)
    (Hub_fsm0_state1)
    (Hub_fsm0_state2)
    (Wrench_fsm0_state0)
    (Wrench_fsm0_state1)
    (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
    (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
    (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
  )
  (:action  opencontainer   :parameters  (?boot1 - Boot )
   :precondition   (and
        (Boot_fsm0_state0)
        (Boot_fsm0_state1)
   )
   :effect   (and
        (Boot_fsm0_state1)
        (Boot_fsm0_state0)
  ))

  (:action  removewheel   :parameters  (?wheel0 - Wheel ?hub0 - Hub ?jack0 - Jack )
   :precondition   (and
        (Wheel_fsm0_state0)
        (Wheel_fsm0_state1)
        (Wheel_fsm0_state2)
        (Hub_fsm0_state0)
        (Hub_fsm0_state1)
        (Jack_fsm0_state0)
        (Jack_fsm0_state1)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state4)
   )
   :effect   (and
        (Wheel_fsm0_state2)
        (Wheel_fsm0_state0)
        (Wheel_fsm0_state1)
        (Hub_fsm0_state1)
        (Hub_fsm0_state2)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state0)
        (Jack_fsm0_state4)
        (Jack_fsm0_state1)
  ))

  (:action  putawaywrench   :parameters  (?wrench1 - Wrench ?boot0 - Boot )
   :precondition   (and
        (Wrench_fsm0_state0)
        (Wrench_fsm0_state1)
        (Boot_fsm0_state0)
        (Boot_fsm0_state1)
   )
   :effect   (and
        (Wrench_fsm0_state1)
        (Wrench_fsm0_state0)
        (Boot_fsm0_state1)
        (Boot_fsm0_state0)
  ))

  (:action  fetchwheel   :parameters  (?wheel0 - Wheel ?boot1 - Boot )
   :precondition   (and
        (Wheel_fsm0_state0)
        (Wheel_fsm0_state1)
        (Wheel_fsm0_state2)
        (Boot_fsm0_state0)
        (Boot_fsm0_state1)
   )
   :effect   (and
        (Wheel_fsm0_state2)
        (Wheel_fsm0_state0)
        (Wheel_fsm0_state1)
        (Boot_fsm0_state1)
        (Boot_fsm0_state0)
  ))

  (:action  jackdown   :parameters  (?hub1 - Hub ?jack1 - Jack )
   :precondition   (and
        (Hub_fsm0_state0)
        (Hub_fsm0_state1)
        (Jack_fsm0_state0)
        (Jack_fsm0_state1)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state4)
   )
   :effect   (and
        (Hub_fsm0_state1)
        (Hub_fsm0_state2)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state0)
        (Jack_fsm0_state4)
        (Jack_fsm0_state1)
  ))

  (:action  putawayjack   :parameters  (?jack1 - Jack ?boot1 - Boot )
   :precondition   (and
        (Jack_fsm0_state0)
        (Jack_fsm0_state1)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state4)
        (Boot_fsm0_state0)
        (Boot_fsm0_state1)
   )
   :effect   (and
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state0)
        (Jack_fsm0_state4)
        (Jack_fsm0_state1)
        (Boot_fsm0_state1)
        (Boot_fsm0_state0)
  ))

  (:action  undo   :parameters  (?nuts1 - Nut ?hub1 - Hub ?wrench0 - Wrench ?jack1 - Jack )
   :precondition   (and
        (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
        (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
        (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
        (Hub_fsm0_state0)
        (Hub_fsm0_state1)
        (Wrench_fsm0_state0)
        (Wrench_fsm0_state1)
        (Jack_fsm0_state0)
        (Jack_fsm0_state1)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state4)
   )
   :effect   (and
        (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
        (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
        (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
        (Hub_fsm0_state1)
        (Hub_fsm0_state2)
        (Wrench_fsm0_state1)
        (Wrench_fsm0_state0)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state0)
        (Jack_fsm0_state4)
        (Jack_fsm0_state1)
  ))

  (:action  fetchwrench   :parameters  (?wrench0 - Wrench ?boot0 - Boot )
   :precondition   (and
        (Wrench_fsm0_state0)
        (Wrench_fsm0_state1)
        (Boot_fsm0_state0)
        (Boot_fsm0_state1)
   )
   :effect   (and
        (Wrench_fsm0_state1)
        (Wrench_fsm0_state0)
        (Boot_fsm0_state1)
        (Boot_fsm0_state0)
  ))

  (:action  putawaywheel   :parameters  (?wheel0 - Wheel ?boot1 - Boot )
   :precondition   (and
        (Wheel_fsm0_state0)
        (Wheel_fsm0_state1)
        (Wheel_fsm0_state2)
        (Boot_fsm0_state0)
        (Boot_fsm0_state1)
   )
   :effect   (and
        (Wheel_fsm0_state2)
        (Wheel_fsm0_state0)
        (Wheel_fsm0_state1)
        (Boot_fsm0_state1)
        (Boot_fsm0_state0)
  ))

  (:action  loosen   :parameters  (?nuts0 - Nut ?hub1 - Hub ?wrench0 - Wrench )
   :precondition   (and
        (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
        (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
        (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
        (Hub_fsm0_state0)
        (Hub_fsm0_state1)
        (Wrench_fsm0_state0)
        (Wrench_fsm0_state1)
   )
   :effect   (and
        (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
        (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
        (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
        (Hub_fsm0_state1)
        (Hub_fsm0_state2)
        (Wrench_fsm0_state1)
        (Wrench_fsm0_state0)
  ))

  (:action  closecontainer   :parameters  (?boot0 - Boot )
   :precondition   (and
        (Boot_fsm0_state0)
        (Boot_fsm0_state1)
   )
   :effect   (and
        (Boot_fsm0_state1)
        (Boot_fsm0_state0)
  ))

  (:action  jackup   :parameters  (?hub1 - Hub ?jack1 - Jack )
   :precondition   (and
        (Hub_fsm0_state0)
        (Hub_fsm0_state1)
        (Jack_fsm0_state0)
        (Jack_fsm0_state1)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state4)
   )
   :effect   (and
        (Hub_fsm0_state1)
        (Hub_fsm0_state2)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state0)
        (Jack_fsm0_state4)
        (Jack_fsm0_state1)
  ))

  (:action  fetchjack   :parameters  (?jack1 - Jack ?boot1 - Boot )
   :precondition   (and
        (Jack_fsm0_state0)
        (Jack_fsm0_state1)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state4)
        (Boot_fsm0_state0)
        (Boot_fsm0_state1)
   )
   :effect   (and
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state0)
        (Jack_fsm0_state4)
        (Jack_fsm0_state1)
        (Boot_fsm0_state1)
        (Boot_fsm0_state0)
  ))

  (:action  putonwheel   :parameters  (?wheel2 - Wheel ?hub0 - Hub ?jack0 - Jack )
   :precondition   (and
        (Wheel_fsm0_state0)
        (Wheel_fsm0_state1)
        (Wheel_fsm0_state2)
        (Hub_fsm0_state0)
        (Hub_fsm0_state1)
        (Jack_fsm0_state0)
        (Jack_fsm0_state1)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state4)
   )
   :effect   (and
        (Wheel_fsm0_state2)
        (Wheel_fsm0_state0)
        (Wheel_fsm0_state1)
        (Hub_fsm0_state1)
        (Hub_fsm0_state2)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state0)
        (Jack_fsm0_state4)
        (Jack_fsm0_state1)
  ))

  (:action  tighten   :parameters  (?nuts0 - Nut ?hub1 - Hub ?wrench0 - Wrench )
   :precondition   (and
        (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
        (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
        (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
        (Hub_fsm0_state0)
        (Hub_fsm0_state1)
        (Wrench_fsm0_state0)
        (Wrench_fsm0_state1)
   )
   :effect   (and
        (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
        (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
        (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
        (Hub_fsm0_state1)
        (Hub_fsm0_state2)
        (Wrench_fsm0_state1)
        (Wrench_fsm0_state0)
  ))

  (:action  doup   :parameters  (?nuts0 - Nut ?hub0 - Hub ?wrench0 - Wrench ?jack0 - Jack )
   :precondition   (and
        (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
        (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
        (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
        (Hub_fsm0_state0)
        (Hub_fsm0_state1)
        (Wrench_fsm0_state0)
        (Wrench_fsm0_state1)
        (Jack_fsm0_state0)
        (Jack_fsm0_state1)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state4)
   )
   :effect   (and
        (Nut_fsm0_state2 ?v0 - Wrench ?v2 - Hub ?v11 - Jack)
        (Nut_fsm0_state0 ?v6 - Wrench ?v9 - Hub)
        (Nut_fsm0_state1 ?v3 - Wrench ?v8 - Jack ?v13 - Hub)
        (Hub_fsm0_state1)
        (Hub_fsm0_state2)
        (Wrench_fsm0_state1)
        (Wrench_fsm0_state0)
        (Jack_fsm0_state2)
        (Jack_fsm0_state3)
        (Jack_fsm0_state0)
        (Jack_fsm0_state4)
        (Jack_fsm0_state1)
  ))

)
